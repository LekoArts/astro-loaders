---
import { getCollection } from 'astro:content';
import { getEntry } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import { getAllTimeTotals, sortByPlays, aggregateGenres, aggregateProperties, aggregateYears, calculateAdjustedPercentage, getRandomColor } from '../utils';
import { countries } from '../dict/countries'
import BarChart from '../components/bar-chart.astro';

const res_stats = await getEntry('traktStats', 'arsaurea')
const res_lists = await getCollection('traktLists')
const res_watched_shows = await getCollection('traktWatchedShows')
const res_watched_movies = await getCollection('traktWatchedMovies')

if (!res_stats) {
	throw new Error('No stats found for the trakt user "arsaurea".');
}

const stats = getAllTimeTotals(res_stats, res_lists);

const top_shows = sortByPlays(res_watched_shows).slice(0, 10)
const top_movies = sortByPlays(res_watched_movies).slice(0, 10)

const shows_genres = aggregateGenres(res_watched_shows)
const movies_genres = aggregateGenres(res_watched_movies)
const shows_countries = aggregateProperties(res_watched_shows, 'country')
const movies_countries = aggregateProperties(res_watched_movies, 'country')
const shows_years = aggregateYears(res_watched_shows)
const movies_years = aggregateYears(res_watched_movies)

const stringified_shows_years = JSON.stringify(shows_years)
const stringified_movies_years = JSON.stringify(movies_years)
---

<Layout>
	<main class="max-w-7xl mx-auto px-6 py-8">
		<h1 class="text-4xl font-bold text-center mb-12">All time stats</h1>
		<h2 class="text-2xl font-semibold mb-6">All time totals</h2>
		<div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4 mb-12">
			 <div class="bg-gray-100 p-4 rounded-lg text-center">
				<div class="text-2xl font-bold text-blue-600">{stats.totals.plays}</div>
				<div class="text-sm text-gray-600">plays</div>
			 </div>
			 <div class="bg-gray-100 p-4 rounded-lg text-center">
				<div class="text-2xl font-bold text-blue-600">{stats.totals.hours}</div>
				<div class="text-sm text-gray-600">hours</div>
			 </div>
			 <div class="bg-gray-100 p-4 rounded-lg text-center">
				<div class="text-2xl font-bold text-blue-600">{stats.totals.collected}</div>
				<div class="text-sm text-gray-600">collected</div>
			 </div>
			 <div class="bg-gray-100 p-4 rounded-lg text-center">
				<div class="text-2xl font-bold text-blue-600">{stats.totals.ratings}</div>
				<div class="text-sm text-gray-600">ratings</div>
			 </div>
			 <div class="bg-gray-100 p-4 rounded-lg text-center">
				<div class="text-2xl font-bold text-blue-600">{stats.totals.comments}</div>
				<div class="text-sm text-gray-600">comments</div>
			 </div>
			 <div class="bg-gray-100 p-4 rounded-lg text-center">
				<div class="text-2xl font-bold text-blue-600">{stats.totals.lists}</div>
				<div class="text-sm text-gray-600">lists</div>
			 </div>
		</div>
		<h2 class="text-2xl font-semibold mb-6">First play</h2>
		<h2 class="text-2xl font-semibold mb-6">TV shows</h2>
		<div class="grid md:grid-cols-2 gap-6 mb-8">
			<div class="bg-gray-100 p-6 rounded-lg">
				<div class="text-xl font-bold text-green-600 mb-2">{stats.shows.hours} hours watched</div>
				<div class="text-sm text-gray-600">per year</div>
				<div class="text-sm text-gray-600">per month</div>
				<div class="text-sm text-gray-600">per day</div>
			</div>
			<div class="bg-gray-100 p-6 rounded-lg">
				<div class="text-xl font-bold text-green-600 mb-2">{stats.shows.plays} episode plays</div>
				<div class="text-sm text-gray-600">per year</div>
				<div class="text-sm text-gray-600">per month</div>
				<div class="text-sm text-gray-600">per day</div>
			</div>
		</div>
		<h3 class="text-xl font-medium mb-4">Your top shows</h3>
		<div class="grid md:grid-cols-2 gap-2 mb-8">
			{top_shows.map(e => (
				<div class="flex justify-between items-center bg-white p-3 rounded border">
					<span class="font-medium">{e.data.show.title}</span>
					<span class="text-sm text-gray-600">({e.data.plays})</span>
				</div>
			))}
		</div>
		<h3 class="text-xl font-medium mb-4">TV show genres</h3>
		<div class="mb-16 mt-14">
			<div class="flex h-8">
				{shows_genres.map((genre, index) => {
					const adjustedPercentage = calculateAdjustedPercentage(shows_genres, genre.count);
					const { colorClass, borderClass } = getRandomColor(index);
					return (
						<div 
							class={`${colorClass} relative group`}
							style={`width: ${adjustedPercentage}%`}
						>
							<div class={`absolute left-0 bottom-8 text-xs border-l-2 text-left pl-2 pt-1 pb-1 group-even:top-8 group-even:bottom-auto group-even:pt-1 group-even:pb-0 ${borderClass}`}>{genre.name} <div class="whitespace-nowrap text-[11px] text-gray-600">{genre.count} shows</div></div>
						</div>
					);
				})}
			</div>
		</div>
		<h3 class="text-xl font-medium mb-4">TV show release years</h3>
		<BarChart items={stringified_shows_years} />
		<h3 class="text-xl font-medium mt-12 mb-4">TV show countries</h3>
		<div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-2 mb-8">
			{shows_countries.map(e => (
				<div class="bg-white p-3 rounded border text-center">
					<div class="font-medium">{countries[e.name.toUpperCase()]}</div>
					<div class="text-sm text-gray-600">({e.count})</div>
				</div>
			))}
		</div>
		<h3 class="text-xl font-medium mb-4">TV show networks</h3>
		<h3 class="text-xl font-medium mb-4">List progress</h3>
		<h3 class="text-xl font-medium mb-4">Highest rated TV shows</h3>
		<h3 class="text-xl font-medium mb-4">All ratings</h3>
		<h2 class="text-2xl font-semibold mb-6 mt-12">Movies</h2>
		<div class="grid md:grid-cols-2 gap-6 mb-8">
			<div class="bg-gray-100 p-6 rounded-lg">
				<div class="text-xl font-bold text-purple-600 mb-2">{stats.movies.hours} hours watched</div>
				<div class="text-sm text-gray-600">per year</div>
				<div class="text-sm text-gray-600">per month</div>
				<div class="text-sm text-gray-600">per day</div>
			</div>
			<div class="bg-gray-100 p-6 rounded-lg">
				<div class="text-xl font-bold text-purple-600 mb-2">{stats.movies.plays} movie plays</div>
				<div class="text-sm text-gray-600">per year</div>
				<div class="text-sm text-gray-600">per month</div>
				<div class="text-sm text-gray-600">per day</div>
			</div>
		</div>
		<h3 class="text-xl font-medium mb-4">Your top movies</h3>
		<div class="grid md:grid-cols-2 gap-2 mb-8">
			{top_movies.map(e => (
				<div class="flex justify-between items-center bg-white p-3 rounded border">
					<span class="font-medium">{e.data.movie.title}</span>
					<span class="text-sm text-gray-600">({e.data.plays})</span>
				</div>
			))}
		</div>
		<h3 class="text-xl font-medium mb-4">Movie genres</h3>
		<div class="mb-16 mt-14">
			<div class="flex h-8">
				{movies_genres.map((genre, index) => {
					const adjustedPercentage = calculateAdjustedPercentage(movies_genres, genre.count);
					const { colorClass, borderClass } = getRandomColor(index);
					return (
						<div 
							class={`${colorClass} relative group`}
							style={`width: ${adjustedPercentage}%`}
						>
							<div class={`absolute left-0 bottom-8 text-xs border-l-2 text-left pl-2 pt-1 pb-1 group-even:top-8 group-even:bottom-auto group-even:pt-1 group-even:pb-0 ${borderClass}`}>{genre.name} <div class="whitespace-nowrap text-[11px] text-gray-600">{genre.count} movies</div></div>
						</div>
					);
				})}
			</div>
		</div>
		<h3 class="text-xl font-medium mb-4">Movie release years</h3>
		<BarChart items={stringified_movies_years} />
		<h3 class="text-xl font-medium mt-12 mb-4">Movie countries</h3>
		<div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-2 mb-8">
			{movies_countries.map(e => (
				<div class="bg-white p-3 rounded border text-center">
					<div class="font-medium">{countries[e.name.toUpperCase()]}</div>
					<div class="text-sm text-gray-600">({e.count})</div>
				</div>
			))}
		</div>
		<h3 class="text-xl font-medium mb-4">Movie studios</h3>
		<h3 class="text-xl font-medium mb-4">List progress</h3>
		<h3 class="text-xl font-medium mb-4">Highest rated movies</h3>
		<h3 class="text-xl font-medium mb-4">All ratings</h3>
		<h2 class="text-2xl font-semibold mb-6 mt-12">Most watched actors</h2>
		<h2 class="text-2xl font-semibold mb-6">Most watched actresses</h2>
		<h2 class="text-2xl font-semibold mb-6">Most watched directors</h2>
		<h2 class="text-2xl font-semibold mb-6">Most watched writers</h2>
		<h2 class="text-2xl font-semibold mb-6">Most recent play</h2>
	</main>
</Layout>
